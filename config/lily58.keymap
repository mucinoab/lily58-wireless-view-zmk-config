/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
  behaviors {
        less_than: less_than {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp Z>, <&kp RA(Z)>;
            mods = <(MOD_RALT)>;
            label = "LESS_THAN";
        };

        greater_than: greater_than {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp X>, <&kp RA(X)>;
            mods = <(MOD_RALT)>;
            label = "GREATER_THAN";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            label = "Base";
            bindings = <
&kp ESC           &kp N1  &kp N2  &kp N3        &kp N4  &kp N5                                         &kp N6  &kp N7         &kp N8     &kp N9   &kp N0    &kp BACKSPACE
&kp TAB           &kp Q   &kp W   &kp E         &kp R   &kp T                                          &kp Y   &kp U          &kp I      &kp O    &kp P     &kp LEFT_BRACKET
&kp LEFT_SHIFT    &kp A   &kp S   &kp D         &kp F   &kp G                                          &kp H   &kp J          &kp K      &kp L    &kp SEMI  &kp RIGHT_SHIFT
&kp LEFT_CONTROL  &less_than &greater_than &kp C &kp V   &kp B      &kp APOSTROPHE    &kp BACKSLASH    &kp N   &kp M          &kp COMMA  &kp DOT  &kp SLASH &kp RSHFT
                                  &kp LEFT_WIN  &mo 1   &kp LEFT_ALT  &kp RETURN        &kp SPACE      &mo 2   &kp RIGHT_ALT  &kp RIGHT_CONTROL
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        lower_layer {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            label = "Lower";
            bindings = <
&kp GRAVE  &kp EXCLAMATION  &kp DOUBLE_QUOTES  &kp HASH  &kp DOLLAR  &kp PERCENT                    &kp AMPERSAND  &kp SLASH  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp MINUS          &kp EQUAL
&kp F1     &kp F2           &kp F3             &kp F4    &kp F5      &kp F6                         &kp F7         &kp F8     &kp F9                &kp F10                &kp F11            &kp F12
&trans     &kp EXCL         &kp AT             &kp HASH  &kp DOLLAR  &kp PRCNT                      &kp CARET      &kp AMPS   &kp KP_MULTIPLY       &kp LPAR               &kp RPAR           &kp TILDE
&trans     &trans           &trans             &trans    &trans      &trans       &trans    &trans  &trans         &kp MINUS  &kp KP_PLUS           &kp LEFT_BRACKET       &kp RIGHT_BRACKET  &kp PIPE
                                               &trans    &trans      &trans       &trans    &trans  &trans         &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            label = "Raise";
            bindings = <
&kp C_MUTE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &trans  &bt BT_PRV  &bt BT_NXT                                 &trans       &trans     &trans        &trans     &trans    &trans
&kp GRAVE   &kp N1             &kp N2           &kp N3  &kp N4      &kp N5                                     &kp N6       &kp N7     &kp N8        &kp N9     &kp N0    &trans
&trans      &trans             &trans           &trans  &trans      &trans                                     &kp LEFT     &kp DOWN   &kp UP_ARROW  &kp RIGHT  &trans    &trans
&trans      &kp LS(SEMICOLON)  &kp COLON        &trans  &trans      &trans      &bt BT_CLR    &trans           &kp KP_PLUS  &kp MINUS  &kp EQUAL     &kp LBKT   &kp RBKT  &kp BSLH
                                                &trans  &trans      &trans      &trans        &kp LA(RC(DEL))  &trans       &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
